<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Junyi's Lab</title><link>/tags/android/</link><description>Junyi's Lab (Android)</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 07 Mar 2020 00:56:42 +0800</lastBuildDate><atom:link href="/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>TVM RPC Android 踩坑记</title><link>/posts/tvm-android-rpc2/</link><pubDate>Sat, 07 Mar 2020 00:56:42 +0800</pubDate><guid>/posts/tvm-android-rpc2/</guid><description>&lt;h1 id="先说结论-先说结论先说结论" >
&lt;div>
&lt;a href="#%e5%85%88%e8%af%b4%e7%bb%93%e8%ae%ba-%e5%85%88%e8%af%b4%e7%bb%93%e8%ae%ba%e5%85%88%e8%af%b4%e7%bb%93%e8%ae%ba">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc2/#先说结论" title="先说结论">&lt;/a>先说结论
&lt;/div>
&lt;/h1>
&lt;p>系统环境：Ubuntu 18.04 LTS&lt;/p>
&lt;p>解决方法：卸载 OpenJDK-11，安装 OpenJDK-8&lt;/p>
&lt;p>备注说明：VMWare 无法正常使用独立显卡，深度学习请不要在虚拟机里进行，否则只能利用 CPU 进行学习。&lt;/p>
&lt;p>当编译 android_rpc 时，你&lt;strong>必须&lt;/strong>在 &lt;code>jni/config.ml&lt;/code> 里指定 &lt;code>libOpenCL.so&lt;/code>，然后在 GitHub 下载 CL-headers。&lt;/p>
&lt;p>When you compile android_rpc, you &lt;strong>HAVE TO&lt;/strong> specify the libOpenCL.so in jni/config.mk, which pulled from your Android phone. Then, download CL-headers from github!&lt;/p>
&lt;p>&lt;strong>READ THE OFFICIAL INSTRUCTIONS CAREFULLY!!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>仔细阅读官方指南！！&lt;/strong>&lt;/p>
&lt;h1 id="问题细节-问题细节问题细节" >
&lt;div>
&lt;a href="#%e9%97%ae%e9%a2%98%e7%bb%86%e8%8a%82-%e9%97%ae%e9%a2%98%e7%bb%86%e8%8a%82%e9%97%ae%e9%a2%98%e7%bb%86%e8%8a%82">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc2/#问题细节" title="问题细节">&lt;/a>问题细节
&lt;/div>
&lt;/h1>
&lt;h2 id="第一天-no-opencl-platform-第一天-no-opencl-platform第一天-no-opencl-platform" >
&lt;div>
&lt;a href="#%e7%ac%ac%e4%b8%80%e5%a4%a9-no-opencl-platform-%e7%ac%ac%e4%b8%80%e5%a4%a9-no-opencl-platform%e7%ac%ac%e4%b8%80%e5%a4%a9-no-opencl-platform">
#
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc2/#第一天-No-OpenCL-platform" title="第一天 No OpenCL platform">&lt;/a>第一天 No OpenCL platform
&lt;/div>
&lt;/h2>
&lt;p>遇到了一个错误：&lt;/p>
&lt;blockquote>
&lt;p>tvm/src/runtime/opencl/opencl_device_api.cc:263: No OpenCL platform matched given existing options …&lt;/p>
&lt;/blockquote>
&lt;p>然后找了好多文章，找到了官方的文档，却发现2019年3月就提出了这个问题，是bug，并且被修复了。&lt;/p>
&lt;p>现在是2020年3月7日，我不应该再遇到这个bug，于是看了看源代码，发现获取不到我的CL信息&lt;/p>
&lt;p>终端里输入&lt;/p>
&lt;p>&lt;code>$ clinfo&lt;/code>&lt;/p>
&lt;p>却显示&lt;/p>
&lt;p>&lt;code>clinfo number of platforms 0&lt;/code>&lt;/p>
&lt;p>然后找了找教程，安装了一下驱动（大环境是我已经安装了 opencl-icd-dev 之类的包了）&lt;/p>
&lt;p>sudo apt install mesa-opencl-icd&lt;/p>
&lt;p>然后就修好了， clinfo 能打出来东西了：&lt;/p>
&lt;blockquote>
&lt;p>Number of platforms 1
Platform Name Clover
Platform Vendor Mesa
Platform Version OpenCL 1.1 Mesa 19.2.8
Platform Profile FULL_PROFILE
Platform Extensions cl_khr_icd
Platform Extensions function suffix MESA&lt;/p>
&lt;p>Platform Name Clover
Number of devices 0&lt;/p>
&lt;p>NULL platform behavior
clGetPlatformInfo(NULL, CL_PLATFORM_NAME, …) Clover
clGetDeviceIDs(NULL, CL_DEVICE_TYPE_ALL, …) Clover
clCreateContext(NULL, …) [default] No devices found in platform
clCreateContextFromType(NULL, CL_DEVICE_TYPE_DEFAULT) No devices found in platform
clCreateContextFromType(NULL, CL_DEVICE_TYPE_CPU) No devices found in platform
clCreateContextFromType(NULL, CL_DEVICE_TYPE_GPU) No devices found in platform
clCreateContextFromType(NULL, CL_DEVICE_TYPE_ACCELERATOR) No devices found in platform
clCreateContextFromType(NULL, CL_DEVICE_TYPE_CUSTOM) No devices found in platform
clCreateContextFromType(NULL, CL_DEVICE_TYPE_ALL) No devices found in platform&lt;/p>
&lt;p>ICD loader properties
ICD loader Name OpenCL ICD Loader
ICD loader Vendor OCL Icd free software
ICD loader Version 2.2.11
ICD loader Profile OpenCL 2.1&lt;/p>
&lt;/blockquote>
&lt;p>然后我用RPC跑GPU测试，又遇到了&lt;/p>
&lt;blockquote>
&lt;p>CommandLine Error: Option ‘help-list’ registered more than once!&lt;/p>
&lt;/blockquote>
&lt;p>这个问题，淦！&lt;/p>
&lt;p>.&lt;/p>
&lt;p>搜了一会，发现了这样一篇文章：&lt;a href="https://discuss.tvm.ai/t/llvm-error-option-registered-more-than-once-while-loading-libtvm-so/269/10">https://discuss.tvm.ai/t/llvm-error-option-registered-more-than-once-while-loading-libtvm-so/269/10&lt;/a>&lt;/p>
&lt;p>其中有一段话：&lt;/p>
&lt;blockquote>
&lt;p>This happens when you compile TVM runtime with both &lt;code>set(USE_OPENCL ON)&lt;/code> and &lt;code>set(USE_LLVM ON)&lt;/code>
You should enable only ONE option but not both.&lt;/p>
&lt;/blockquote>
&lt;p>我试了一下，编译的时候开着OPENCL，LLVM关掉，发现错的更离谱了&lt;/p>
&lt;p>然后我把OPENCL关掉，LLVM打开，Vulkan打开，还是出错&lt;/p>
&lt;p>我试试LLVM打开，OPENCL关闭，Vulkan关闭&lt;/p>
&lt;p>（这不就是之前的状态吗???）&lt;/p>
&lt;hr>
&lt;h2 id="第二天-no-opencl-device-第二天-no-opencl-device第二天-no-opencl-device" >
&lt;div>
&lt;a href="#%e7%ac%ac%e4%ba%8c%e5%a4%a9-no-opencl-device-%e7%ac%ac%e4%ba%8c%e5%a4%a9-no-opencl-device%e7%ac%ac%e4%ba%8c%e5%a4%a9-no-opencl-device">
#
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc2/#第二天-No-OpenCL-device" title="第二天 No OpenCL device">&lt;/a>第二天 No OpenCL device
&lt;/div>
&lt;/h2>
&lt;p>睡了一觉，第二天了，&lt;/p>
&lt;p>遇到了新的错误：&lt;/p>
&lt;blockquote>
&lt;p>Using CPU OpenCL device
No OpenCL device&lt;/p>
&lt;/blockquote>
&lt;p>按照 tqchen 的说法，make clean 然后 make&lt;/p>
&lt;p>还是不行（我重装了llvm）&lt;/p>
&lt;p>后来，在 &lt;a href="https://askubuntu.com/questions/809450/installing-opencl-for-svga-ii-adapter">https://askubuntu.com/questions/809450/installing-opencl-for-svga-ii-adapter&lt;/a>&lt;/p>
&lt;p>找到这么一段话：&lt;a href="https://askubuntu.com/posts/809481/timeline">https://askubuntu.com/posts/809481/timeline&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>According to the top answer to &lt;a href="https://stackoverflow.com/questions/27996996/trying-to-install-opencl-on-vm">this question&lt;/a>, the Intel SDK does not work on VMWare. It suggests instead trying to use the AMD APP SDK&lt;/p>
&lt;/blockquote>
&lt;p>现在我还是反复遇到 bug，找到这样一段描述：&lt;/p>
&lt;p>&lt;strong>TVM DOES NOT SUPPORT openjdk-11 !!!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>TVM DOES NOT SUPPORT openjdk-11 !!!&lt;/strong>&lt;/p>
&lt;p>&lt;strong>TVM DOES NOT SUPPORT openjdk-11 !!!&lt;/strong>&lt;/p>
&lt;p>&lt;code>apt install openjdk-8-jdk&lt;/code> &lt;strong>ONLY&lt;/strong>!&lt;/p>
&lt;p>Then set &lt;code>JAVA_HOME&lt;/code> in your environment!&lt;/p>
&lt;hr>
&lt;h2 id="第三天-解决-第三天-解决第三天-解决" >
&lt;div>
&lt;a href="#%e7%ac%ac%e4%b8%89%e5%a4%a9-%e8%a7%a3%e5%86%b3-%e7%ac%ac%e4%b8%89%e5%a4%a9-%e8%a7%a3%e5%86%b3%e7%ac%ac%e4%b8%89%e5%a4%a9-%e8%a7%a3%e5%86%b3">
#
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc2/#第三天-解决" title="第三天 解决">&lt;/a>第三天 解决
&lt;/div>
&lt;/h2>
&lt;p>When you compile android_rpc, you &lt;strong>HAVE TO&lt;/strong> specify the libOpenCL.so in jni/config.mk, which pulled from your Android phone. Then, download CL-headers from github!&lt;/p>
&lt;p>&lt;strong>READ THE OFFICIAL INSTRUCTIONS CAREFULLY!!&lt;/strong>&lt;/p></description></item><item><title>TVM Android 构建时千万不要用最新的工具</title><link>/posts/tvm-android/</link><pubDate>Tue, 03 Mar 2020 00:56:42 +0800</pubDate><guid>/posts/tvm-android/</guid><description>&lt;p>遇到报错 &lt;code>[INSTALL_FAILED_INVALID_APK: Failed to extract native libraries, res=-2]&lt;/code>&lt;/p>
&lt;p>修改 &lt;code>AndroidManifest.xml&lt;/code> 的 &lt;code>application&lt;/code> 字段，添加 &lt;code>android:extractNativeLibs=&amp;quot;true&amp;quot;&lt;/code> 即可解决问题&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;application
android:extractNativeLibs=&amp;#34;true&amp;#34;
android:allowBackup=&amp;#34;true&amp;#34;
android:label=&amp;#34;@string/app\_name&amp;#34;
...
...
&lt;/code>&lt;/pre>&lt;p>改成 false 也可以&lt;/p>
&lt;p>原因是 Android 6.0 以后 so 文件不默认封装在 apk 里&lt;/p>
&lt;p>&lt;a href="https://testerhome.com/topics/18463">https://testerhome.com/topics/18463&lt;/a>&lt;/p>
&lt;p>，&lt;/p>
&lt;p>具体注意事项看上面的链接！&lt;/p>
&lt;p>具体注意事项看上面的链接！&lt;/p>
&lt;p>具体注意事项看上面的链接！&lt;/p>
&lt;p>具体注意事项看上面的链接！&lt;/p>
&lt;p>，&lt;/p>
&lt;p>因为上面的链接里讲了 extractNativeLibes 设置 true 或 false 都会带来哪些影响以及解决方法以及&lt;strong>签名的顺序&lt;/strong>！&lt;/p>
&lt;p>，&lt;/p>
&lt;p>我真想批评一下这些搞科研的人，为什么不能追随新科技呢。&lt;/p>
&lt;p>稍微做一下适配，也不会让我们这些后来者因为这些问题踩坑浪费这么多时间吧…&lt;/p>
&lt;p>，&lt;/p>
&lt;p>一说起这个我就想起来那些依然在用 python2 的人。&lt;/p>
&lt;p>print 加个括号就这么难吗？！&lt;/p></description></item><item><title>TVM RPC Android 部署踩坑</title><link>/posts/tvm-android-rpc/</link><pubDate>Tue, 03 Mar 2020 00:42:51 +0800</pubDate><guid>/posts/tvm-android-rpc/</guid><description>&lt;h1 id="先说结论-先说结论先说结论" >
&lt;div>
&lt;a href="#%e5%85%88%e8%af%b4%e7%bb%93%e8%ae%ba-%e5%85%88%e8%af%b4%e7%bb%93%e8%ae%ba%e5%85%88%e8%af%b4%e7%bb%93%e8%ae%ba">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc/#先说结论" title="先说结论">&lt;/a>先说结论
&lt;/div>
&lt;/h1>
&lt;p>&lt;strong>环境&lt;/strong>：Ubuntu 18.04 LTS （非虚拟机）&lt;/p>
&lt;p>&lt;strong>手机&lt;/strong>：Xiaomi Mi 5s, 3GB RAM, 64GB ROM&lt;/p>
&lt;p>&lt;strong>系统&lt;/strong>：原生 Android 10&lt;/p>
&lt;p>&lt;strong>遇到问题&lt;/strong>：android_rpc 无法编译部署&lt;/p>
&lt;p>&lt;strong>解决方法&lt;/strong>：核心思路是分析 gradle task 执行顺序，分析相关脚本，检查环境变量。这个问题需要具体情况具体分析，请仔细查看本文【问题解决】部分的相关描述。&lt;/p>
&lt;hr>
&lt;h1 id="部署-android-rpc-部署-android_rpc部署-android_rpc" >
&lt;div>
&lt;a href="#%e9%83%a8%e7%bd%b2-android-rpc-%e9%83%a8%e7%bd%b2-android_rpc%e9%83%a8%e7%bd%b2-android_rpc">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc/#部署-android-rpc" title="部署 android_rpc">&lt;/a>部署 android_rpc
&lt;/div>
&lt;/h1>
&lt;p>按照官方教程来走，先是基于源代码安装 TVM 库，安装之前要把 LLVM 装好。&lt;/p>
&lt;p>然后安装 Gradle，Maven&lt;/p>
&lt;p>然后编译 TVM4J&lt;/p>
&lt;p>编译好之后我开始&lt;strong>按照官方教程&lt;/strong>尝试部署 apps/android_rpc 这个项目&lt;/p>
&lt;p>因为上次部署 TVM 的经验教训让我知道了严格按照官方教程走的重要性。&lt;/p>
&lt;p>只可惜，这次就算按照官方教程来部署，得到的结果依然是：&lt;/p>
&lt;p>&lt;strong>失败。&lt;/strong>&lt;/p>
&lt;hr>
&lt;h1 id="踩坑-踩坑踩坑" >
&lt;div>
&lt;a href="#%e8%b8%a9%e5%9d%91-%e8%b8%a9%e5%9d%91%e8%b8%a9%e5%9d%91">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc/#踩坑" title="踩坑">&lt;/a>踩坑
&lt;/div>
&lt;/h1>
&lt;p>Gradle 版本不对，Ubuntu 18.04 默认给安装的是 3.x 版本，后来添加的源，upgrade 一下才可以。&lt;/p>
&lt;p>然后又遇到了你懂的特色互联网防火墙的问题：Maven 下载速度特别慢。&lt;/p>
&lt;p>解决了网络的问题之后，我心想能不能把项目丢到 AndroidStudio 里面跑啊，然后我就试了一下&lt;/p>
&lt;p>于是&lt;/p>
&lt;p>，&lt;/p>
&lt;p>给自己带来了另一个坑&lt;/p>
&lt;p>Android Studio 推荐我更新 Gradle&lt;/p>
&lt;p>我手贱点了更新&lt;/p>
&lt;p>然后版本号对不上了&lt;/p>
&lt;p>搞了半天踩意识到是自己手贱更新了Gradle。&lt;/p>
&lt;p>。&lt;/p>
&lt;p>。&lt;/p>
&lt;p>。&lt;/p>
&lt;p>折腾了好长一段时间，遇到了新的问题：&lt;/p>
&lt;p>&lt;code>cannot find class file 'org.apache.tvm.LibInfo'&lt;/code>&lt;/p>
&lt;p>叼，烦死了。&lt;/p>
&lt;p>。&lt;/p>
&lt;p>我无论怎么 &lt;code>make clean&lt;/code> 都不行，&lt;/p>
&lt;p>然后我重新把 TVM 编译了一遍（我真是傻逼）&lt;/p>
&lt;p>clean 了一下，make 了一下，编译完了&lt;/p>
&lt;p>&lt;strong>依！然！报！错！&lt;/strong>&lt;/p>
&lt;p>折腾了好长一段时间，到了晚上12点，用官方提供的工具怎么也解决不了问题，&lt;/p>
&lt;p>Google 了一次又一次，全是失败告终。&lt;/p>
&lt;hr>
&lt;h1 id="灵机一动-灵机一动灵机一动" >
&lt;div>
&lt;a href="#%e7%81%b5%e6%9c%ba%e4%b8%80%e5%8a%a8-%e7%81%b5%e6%9c%ba%e4%b8%80%e5%8a%a8%e7%81%b5%e6%9c%ba%e4%b8%80%e5%8a%a8">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc/#灵机一动" title="灵机一动">&lt;/a>灵机一动
&lt;/div>
&lt;/h1>
&lt;p>配置这么大型的项目，而且网上没有多少参考资料，搜索也几乎很难找到结果。手中的设备千差万别，想要真正部署起来真的太麻烦了。在我快疯了的时候，突然想到：&lt;strong>草！我干嘛不看看他的脚本怎么写的呢？&lt;/strong>&lt;/p>
&lt;p>说干就干，我在&lt;code>src/main/jni/build.sh&lt;/code>这个脚本里发现了这么一段话：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>javah -o &lt;span style="color:#ff5c57">$CURR_DIR&lt;/span>/org_apache_tvm_native_c_api.h -cp &lt;span style="color:#5af78e">&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">$ROOT_DIR&lt;/span>&lt;span style="color:#5af78e">/jvm/core/target/*&amp;#34;&lt;/span> org.apache.tvm.LibInfo &lt;span style="color:#ff5c57">exit&lt;/span> -1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>没错，就是这句话⬆️执行失败导致 &lt;code>exit -1&lt;/code>，在这句话前面还设置了一堆环境变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">PATH&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">$PATH&lt;/span>&lt;span style="color:#5af78e">:/usr/local/bin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">CURR_DIR&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#ff6ac1">$(&lt;/span>&lt;span style="color:#ff5c57">cd&lt;/span> &lt;span style="color:#5af78e">`&lt;/span>dirname &lt;span style="color:#ff5c57">$0&lt;/span>&lt;span style="color:#5af78e">`&lt;/span>; &lt;span style="color:#ff5c57">pwd&lt;/span>&lt;span style="color:#ff6ac1">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">ROOT_DIR&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">$CURR&lt;/span>&lt;span style="color:#5af78e">\_DIR/../../../../../..&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我把脚本里的命令都打到 bash 里，然后一步步运行，&lt;/p>
&lt;p>你猜怎么着？&lt;/p>
&lt;p>，&lt;/p>
&lt;p>，&lt;/p>
&lt;p>，&lt;/p>
&lt;p>报错了！（草）&lt;/p>
&lt;p>然后我就查这个 jni 的用法，查到了之后，发现，还是报错&lt;/p>
&lt;p>为什么呢？环境变量有问题吗&lt;/p>
&lt;p>果然有问题。&lt;/p>
&lt;hr>
&lt;h1 id="问题解决-问题解决问题解决" >
&lt;div>
&lt;a href="#%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3-%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3%e9%97%ae%e9%a2%98%e8%a7%a3%e5%86%b3">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc/#问题解决" title="问题解决">&lt;/a>问题解决
&lt;/div>
&lt;/h1>
&lt;p>（上面的那些就是发发牢骚，这里才是解决问题的部分）&lt;/p>
&lt;p>&lt;strong>我不想继续描述我是怎么发现这个问题的了&lt;/strong>，就是作出假设 -&amp;gt; 一步步的推翻自己的假设 -&amp;gt; 反馈思考 -&amp;gt; 做出新的假设&lt;/p>
&lt;p>重复上面的过程直到问题解决或者我放弃思考。&lt;/p>
&lt;p>到处翻，发现 android_rpc 项目中的 build.gradle 里面指定了一个 task：（其实是报错给我说的这个 build.gradle 出了错）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>task &lt;span style="color:#57c7ff">buildJni&lt;/span>(type: Exec, description: &lt;span style="color:#ff5c57">&amp;#39;&lt;/span>Build JNI libs&lt;span style="color:#ff5c57">&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commandLine &lt;span style="color:#ff5c57">&amp;#39;&lt;/span>sh&lt;span style="color:#ff5c57">&amp;#39;&lt;/span>, &lt;span style="color:#ff5c57">&amp;#39;&lt;/span>src&lt;span style="color:#ff6ac1">/&lt;/span>main&lt;span style="color:#ff6ac1">/&lt;/span>jni&lt;span style="color:#ff6ac1">/&lt;/span>build.&lt;span style="color:#57c7ff">sh&lt;/span>&lt;span style="color:#ff5c57">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个 task 的意思是执行 &lt;code>build.sh&lt;/code> 这个 script （刚才我们发现问题的那个脚本）&lt;/p>
&lt;p>，&lt;/p>
&lt;p>但是这个 script 里面的 javah 那句话（JNI的命令）会提示找不到 class file ‘org.apache.tvm.LibInfo’&lt;/p>
&lt;p>奇怪的是 jar 包里有 &lt;code>LibInfo.class&lt;/code> 这个文件，而且我去看了一下 &lt;code>tvm/jvm/core&lt;/code> 文件夹里面，也是有 &lt;code>LibInfo.java&lt;/code> 的，所以不应该是我们的包的问题，应该是路径什么的出了错。&lt;/p>
&lt;p>把 &lt;code>build.sh&lt;/code> 里面的变量打印出来发现，如果我在 &lt;code>tvm/apps/android_rpc/&lt;/code> 这个工作目录里，执行 &lt;code>gradle clean build&lt;/code> 的话，&lt;strong>$ROOT_DIR 的值并不是它应该有的值，$ROOT_DIR的值应该是 tvm/apps/android_rpc， 也就是这个项目的路径&lt;/strong>。然而我把这个值打印出来发现， &lt;code>$ROOT_DIR&lt;/code> 的值是系统的根目录，&lt;strong>在根目录里肯定找不到 LibInfo 啊！&lt;/strong>&lt;/p>
&lt;p>在 &lt;code>android_rpc/app/src/main/jni&lt;/code> 这个工作目录执行的话， &lt;code>ROOT\DIR=&amp;quot;$CURR_DIR/../../../../../..&amp;quot;&lt;/code> 正好跳到 android_rpc 里&lt;/p>
&lt;p>然后我手工执行了这个sh，在 build.gradle 里把这个行为给注释掉了&lt;/p>
&lt;p>&lt;strong>成功！&lt;/strong>&lt;/p>
&lt;hr>
&lt;h1 id="总结-总结总结" >
&lt;div>
&lt;a href="#%e6%80%bb%e7%bb%93-%e6%80%bb%e7%bb%93%e6%80%bb%e7%bb%93">
##
&lt;/a>
&lt;a href="https://www.junyi.dev/posts/tvm-android-rpc/#总结" title="总结">&lt;/a>总结
&lt;/div>
&lt;/h1>
&lt;p>其实一开始，在 android_rpc 这个目录里执行 &lt;code>gradle clean build&lt;/code> 是可以成功编译出文件的，但是在后面签名的时候给我报了个无法找到什么什么类的错误，然后我决定编译 android_deploy 试试，发现成功了，签名也正常，在 Android 10 手机上也可以正常运行，我就觉得肯定是这个项目的问题。&lt;/p>
&lt;p>后来我再次尝试编译 android_rpc 的时候，出现了文章中描述的问题，技艺不精，导致这么长时间才解决这个问题，期间也查阅了大量的资料，中途也想过放弃，但是还是坚持下来了。最终把问题分析过程以及思路整理成这篇文章，希望后人遇到相关问题可以通过这篇文章节约大量时间。&lt;/p></description></item></channel></rss>