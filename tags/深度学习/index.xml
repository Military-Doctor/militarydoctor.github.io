<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>深度学习 on Junyi's Lab</title><link>/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</link><description>Junyi's Lab (深度学习)</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>junyi.h@comp.nus.edu.sg (Junyi Hou)</managingEditor><webMaster>junyi.h@comp.nus.edu.sg (Junyi Hou)</webMaster><lastBuildDate>Fri, 25 Aug 2023 21:32:31 +0800</lastBuildDate><atom:link href="/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>当 RA 的我学到了什么：如何优化实验流程</title><link>/posts/ra-experience/</link><pubDate>Fri, 25 Aug 2023 21:32:31 +0800</pubDate><author>junyi.h@comp.nus.edu.sg (Junyi Hou)</author><guid>/posts/ra-experience/</guid><description>&lt;h2 id="背景" >
&lt;div>
&lt;a href="#%e8%83%8c%e6%99%af">
#
&lt;/a>
背景
&lt;/div>
&lt;/h2>
&lt;p>成为 NUS 的 Research Assistant， 我跑了 &lt;del>1,072&lt;/del> 3,172 个实验。&lt;/p>
&lt;p>几周前，面对小老板的需求，我手足无措：&lt;/p>
&lt;blockquote>
&lt;p>“把 XX 数据集在 A B C 三个算法上跑一下”&lt;/p>
&lt;p>“把 learning rate 改成 0.001 跑一下”&lt;/p>
&lt;p>“把 activation层 去掉，跑一下”&lt;/p>
&lt;p>“昨天跑的实验结果怎么样了？” （一看 log 发现零零散散几个任务出错了需要重新跑）&lt;/p>
&lt;/blockquote>
&lt;p>特别是，同时在&lt;strong>不同服务器上&lt;/strong>运行&lt;strong>很多任务&lt;/strong>，并且&lt;strong>个别任务&lt;/strong>跑的时候 &lt;code>显卡/内存&lt;/code> 报错，log 里记录的信息并不足以区分这是哪个任务的时候&amp;hellip;.&lt;/p>
&lt;p>更糟糕的是，不同服务器上的代码版本也可能不同，这让问题变得更复杂（使用git可能是一个解决方法）。&lt;/p>
&lt;p>当我写下这篇文章的时候，意识到我可以把总结出的技能&lt;strong>迁移到其他项目中&lt;/strong>。&lt;/p>
&lt;p>为了防止遗忘，我把这次的经验写下来，跟大家分享一下心得（我是如何建立属于我的&lt;strong>文件管理体系&lt;/strong>和&lt;strong>实验进度追踪&lt;/strong>方法）&lt;/p>
&lt;h2 id="文件管理体系" >
&lt;div>
&lt;a href="#%e6%96%87%e4%bb%b6%e7%ae%a1%e7%90%86%e4%bd%93%e7%b3%bb">
#
&lt;/a>
文件管理体系
&lt;/div>
&lt;/h2>
&lt;p>&lt;strong>数据集文件夹&lt;/strong>使用统一的文件结构，用于存放各种数据集。（与项目无关）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/home/junyi/data/mnist/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/home/junyi/data/cifar10/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/home/junyi/data/covtype/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>项目文件夹&lt;/strong>针对每一个项目单独设立（例如VertiBench和VertiLearn）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/home/junyi/project/VertiBench/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/home/junyi/project/VertiLearn/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./experiment/ &lt;span style="color:#78787e"># 实验文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./experiment/&lt;span style="color:#ff6ac1">{&lt;/span>exp-name&lt;span style="color:#ff6ac1">}&lt;/span>-&lt;span style="color:#ff6ac1">{&lt;/span>timestamp&lt;span style="color:#ff6ac1">}&lt;/span>/*.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./data/ &lt;span style="color:#78787e"># 软链接到数据集&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./code/ &lt;span style="color:#78787e"># 项目的仓库 / 相关代码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./rebuttal/ &lt;span style="color:#78787e"># 回复 Reviewer 的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./rebuttal/&lt;span style="color:#ff6ac1">{&lt;/span>reviewer-id&lt;span style="color:#ff6ac1">}&lt;/span>/experiment/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./rebuttal/&lt;span style="color:#ff6ac1">{&lt;/span>reviewer-id&lt;span style="color:#ff6ac1">}&lt;/span>/plot/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./rebuttal/&lt;span style="color:#ff6ac1">{&lt;/span>reviewer-id&lt;span style="color:#ff6ac1">}&lt;/span>/comment/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="如何做实验" >
&lt;div>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%81%9a%e5%ae%9e%e9%aa%8c">
#
&lt;/a>
如何做实验
&lt;/div>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>⭐️ 自动化&lt;/strong>: 跑太多的实验真的很麻烦，特别是出问题需要重跑特定的实验时会让人头大。我坚决反对手工操作，即使做手工实验，也务必记录每一个实验命令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>使用脚本&lt;/strong>: 我靠脚本实现自动化，用一个脚本来管理所有的实验，每个实验都会被分配一个&lt;strong>唯一id&lt;/strong>。这样在某个实验出错时，例如&lt;code>显存不足&lt;/code>，我可以直接根据 id 重新运行该实验（特别是在使用 slurm 的时候，有这样的脚本可以省去不少写 sbatch 的工作）。同时，我还有另一个脚本用来&lt;strong>追踪每个实验的进度&lt;/strong>（打印进度条）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>日志要 print 完整&lt;/strong>: 每次实验都确保打印所有的参数，每一行的开头都要有时间（精确到秒），打印的内容包括模型的&lt;strong>超参数&lt;/strong>和&lt;strong>结构&lt;/strong>，并且把 parse 的 args 都打印出来。当实验变得复杂并且时间有限时，这种详细的记录非常有助于我回顾。（如果实验名足够详细，其实在日志里也没必要打印这么多内容）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>为实验命名&lt;/strong>: 为了方便查找，每次实验我都会给它一个描述性的名字，如 “test SplitNN with lr 0.3”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>使用 git&lt;/strong>: 为了尽快得到结果，我不得不在多台机器上进行实验，这让我非常非常头痛。建议使用 git 来完成多个机器的代码同步。（不建议用 git 来同步&lt;strong>数据集&lt;/strong>🤣）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="总结" >
&lt;div>
&lt;a href="#%e6%80%bb%e7%bb%93">
#
&lt;/a>
总结
&lt;/div>
&lt;/h2>
&lt;p>这次 RA 感觉还蛮苦的，不过好在我 “闭门造车”，造出来一套属于我的文管理体系和进度追踪系统，提高了工作效率，也减少了很多心智负担。&lt;/p>
&lt;blockquote>
&lt;p>（后来有老师说，做 benchmark 确实是一个很苦的工作）&lt;/p>
&lt;/blockquote>
&lt;p>希望我的经验能为大家提供一些参考。&lt;/p>
&lt;p>同时也想告诫自己，&lt;strong>&lt;span style="color: red;">不要想偷懒！！！&lt;/span>&lt;/strong> &lt;strong>不要想着 “这个实验手动跑一下算了”&lt;/strong>，因为你永远不知道哪个实验会出问题，哪个实验会成为你的重要成果。&lt;/p>
&lt;p>也顺便感谢小老板一直对我很有耐心！在合作过程中小老板给到我很多中肯的建议，让我学到了很多，具体跟小老板发生了什么事，我准备另外写篇文章来记录。 (见 &lt;a href="https://www.junyi.dev/posts/research-101/">这篇文章&lt;/a>)&lt;/p>
&lt;hr>
&lt;h2 id="后续更新" >
&lt;div>
&lt;a href="#%e5%90%8e%e7%bb%ad%e6%9b%b4%e6%96%b0">
#
&lt;/a>
后续更新
&lt;/div>
&lt;/h2>
&lt;h3 id="2023-年-9-月-22-日更新" >
&lt;div>
&lt;a href="#2023-%e5%b9%b4-9-%e6%9c%88-22-%e6%97%a5%e6%9b%b4%e6%96%b0">
##
&lt;/a>
2023 年 9 月 22 日更新
&lt;/div>
&lt;/h3>
&lt;p>论文投 NeurIPS 2023 被拒了，转投 ICLR 2024，需要补一些实验，还好有&lt;strong>自动化脚本&lt;/strong>和&lt;strong>有序的文件结构&lt;/strong>，让我不用花太多时间就能完成这些实验。&lt;/p>
&lt;h3 id="2023-年-10-月-2-日更新" >
&lt;div>
&lt;a href="#2023-%e5%b9%b4-10-%e6%9c%88-2-%e6%97%a5%e6%9b%b4%e6%96%b0">
##
&lt;/a>
2023 年 10 月 2 日更新
&lt;/div>
&lt;/h3>
&lt;p>补了实验，重新画了图（我只需要把 log 放到对应的文件夹里，然后运行一下 Jupyter Notebook 就可以了）&lt;/p>
&lt;h3 id="2023-年-11-月-16-日更新" >
&lt;div>
&lt;a href="#2023-%e5%b9%b4-11-%e6%9c%88-16-%e6%97%a5%e6%9b%b4%e6%96%b0">
##
&lt;/a>
2023 年 11 月 16 日更新
&lt;/div>
&lt;/h3>
&lt;p>ICLR 2024 的 Rebuttal 期间，又补了 840 个实验&amp;hellip;.&lt;/p>
&lt;h3 id="2024-年-3-月-4-日更新" >
&lt;div>
&lt;a href="#2024-%e5%b9%b4-3-%e6%9c%88-4-%e6%97%a5%e6%9b%b4%e6%96%b0">
##
&lt;/a>
2024 年 3 月 4 日更新
&lt;/div>
&lt;/h3>
&lt;p>ICLR 2024 中稿了！欢迎大家参观我们的&lt;a href="https://openreview.net/forum?id=glwwbaeKm2">论文&lt;/a>、&lt;a href="https://vertibench.xtra.science/">网站&lt;/a> 和 &lt;a href="https://github.com/Xtra-Computing/VertiBench">GitHub&lt;/a>&lt;/p></description></item></channel></rss>