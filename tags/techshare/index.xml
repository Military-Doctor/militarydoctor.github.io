<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TechShare on Junyi's Lab</title><link>/tags/techshare/</link><description>Junyi's Lab (TechShare)</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>junyi.h@comp.nus.edu.sg
(Junyi Hou)</managingEditor><lastBuildDate>Mon, 18 Mar 2024 19:57:21 +0800</lastBuildDate><atom:link href="/tags/techshare/index.xml" rel="self" type="application/rss+xml"/><item><title>隐藏 GitHub Pages 里的敏感文章（GitHub Actions）</title><link>/posts/github-actions/</link><pubDate>Mon, 18 Mar 2024 19:57:21 +0800</pubDate><author>junyi.h@comp.nus.edu.sg (Junyi Hou)</author><guid>/posts/github-actions/</guid><description>&lt;h2 id="背景" >
&lt;div>
&lt;a href="#%e8%83%8c%e6%99%af">
#
&lt;/a>
背景
&lt;/div>
&lt;/h2>
&lt;p>如何&lt;strong>防止他人看到你&lt;/strong>托管在 GitHub Pages 上的某些文章？&lt;/p>
&lt;p>这篇指南提供了一种在 GitHub Pages 上托管网站同时保持敏感内容私密的策略。&lt;/p>
&lt;p>这个解决方案涉及到使用两个独立的 GitHub 仓库：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>私有仓库 &lt;code>blog-src&lt;/code>: 存放你的网站源代码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>公开仓库 &lt;code>blog.github.io&lt;/code>: 用于生成的静态网站。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这个方法确保敏感内容在 &lt;code>blog-src&lt;/code> 中保持私密。&lt;/p>
&lt;p>每次对 &lt;code>blog-src&lt;/code> 进行提交时，一个自动化过程会构建静态网站并将其推送到 &lt;code>blog.github.io&lt;/code>（参见&lt;a href="#fig1">图 1&lt;/a>）。&lt;/p>
&lt;figure>
&lt;img id="fig1" src="https://www.junyi.dev/posts/github-actions/fig1.png" alt="The Overview of using Github Actions to publish GitHub pages" width="500" />
&lt;figcaption>图 1 - 修改 &lt;code>blog-src&lt;/code> 时，自动构建网站并同步到 &lt;code>blog.github.io&lt;/code>&lt;/figcaption>
&lt;/figure>
&lt;p>让我们看看如何实现这个功能！&lt;/p>
&lt;h2 id="第一步创建一个-personal-access-token" >
&lt;div>
&lt;a href="#%e7%ac%ac%e4%b8%80%e6%ad%a5%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa-personal-access-token">
#
&lt;/a>
第一步，创建一个 personal access token
&lt;/div>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>访问&lt;a href="https://github.com/settings/tokens">此页面&lt;/a>（Settings ➜ Developer Settings ➜ Personal access tokens）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Generate new token (classic)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>勾选所有的 &amp;ldquo;repo&amp;rdquo; 和 &amp;ldquo;workflow&amp;rdquo;。（参见&lt;a href="#fig2">图 2&lt;/a>）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;figure>
&lt;img src="https://www.junyi.dev/posts/github-actions/create-personal-key.png" alt="View Service" width="500" />
&lt;figcaption>图 2 - 给 GitHub Action 创建一个 personal access token&lt;/figcaption>
&lt;/figure>
&lt;figure>
&lt;img src="https://www.junyi.dev/posts/github-actions/created-token.png" alt="View Service" width="500" />
&lt;figcaption>图 3 - 创建好的 personal access token&lt;/figcaption>
&lt;/figure>
&lt;p>复制你生成的 Token，比如我的是 &lt;code>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&lt;/code>&lt;/p>
&lt;p>（此 Token 仅用作演示，实际已失效）&lt;/p>
&lt;h2 id="第二步给-blog-src-创建一个-repository-secret" >
&lt;div>
&lt;a href="#%e7%ac%ac%e4%ba%8c%e6%ad%a5%e7%bb%99-blog-src-%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa-repository-secret">
#
&lt;/a>
第二步，给 &lt;code>blog-src&lt;/code> 创建一个 repository secret
&lt;/div>
&lt;/h2>
&lt;p>这个仓库包含我们网站的源代码，和一个 GitHub Action。&lt;/p>
&lt;p>因此，我们需要把 personal access token（从第一步生成）放到 repository secret 里，以支持 GitHub Action 过程。&lt;/p>
&lt;p>转到 &lt;code>blog-src&lt;/code> ➜ Settings ➜ Secrets and variables ➜ Actions ➜ New &lt;strong>repository&lt;/strong> secret&lt;/p>
&lt;figure>
&lt;img src="https://www.junyi.dev/posts/github-actions/new-repo-secret.png" alt="View Service" width="500" />
&lt;figcaption>图 4 - 创建 repository secret 的入口&lt;/figcaption>
&lt;/figure>
&lt;figure>
&lt;img src="https://www.junyi.dev/posts/github-actions/add-secret.png" alt="View Service" width="500" />
&lt;figcaption>图 5 - 创建一个 repository secret&lt;/figcaption>
&lt;/figure>
&lt;h2 id="第三步给-blog-src-设置一个-workflow" >
&lt;div>
&lt;a href="#%e7%ac%ac%e4%b8%89%e6%ad%a5%e7%bb%99-blog-src-%e8%ae%be%e7%bd%ae%e4%b8%80%e4%b8%aa-workflow">
#
&lt;/a>
第三步，给 &lt;code>blog-src&lt;/code> 设置一个 workflow
&lt;/div>
&lt;/h2>
&lt;p>Repository ➜ Actions ➜ Set up a workflow yourself&lt;/p>
&lt;figure>
&lt;img src="https://www.junyi.dev/posts/github-actions/setup-actions.png" alt="Setup Actions", width="500" />
&lt;figcaption>图 6 - 设置一个 workflow.&lt;/figcaption>
&lt;/figure>
&lt;p>你需要学习如何编写工作流，以下是一些你可以阅读的文档：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/en/actions/quickstart">GitHub Actions 快速入门&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/actions/examples">工作流示例&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>仔细设计你的 workflow 文件，这里是一个示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># main.yaml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># A Sample workflow for building and deploying a site to GitHub Pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">name&lt;/span>: Deploy Website to Pages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">push&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">branches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - main &lt;span style="color:#78787e"># Triggers this workflow whenever there&amp;#39;s a push to the `main` branch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#78787e"># Allows you to run this workflow manually from the Actions tab&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">workflow_dispatch&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">schedule&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#78787e"># Runs at 00:00 UTC every day&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ff6ac1">cron&lt;/span>: &lt;span style="color:#5af78e">&amp;#34;0 0 * * *&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">permissions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">contents&lt;/span>: read
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">pages&lt;/span>: write
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">id-token&lt;/span>: write
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">concurrency&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">group&lt;/span>: &lt;span style="color:#5af78e">&amp;#34;pages&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">cancel-in-progress&lt;/span>: &lt;span style="color:#ff6ac1">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># Default to bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">defaults&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">run&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">shell&lt;/span>: bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">build-and-deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">runs-on&lt;/span>: ubuntu-latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">env&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">YOUR_ENV_HERE&lt;/span>: &lt;span style="color:#ff9f43">0.1.2.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ff6ac1">name&lt;/span>: Checkout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">uses&lt;/span>: actions/checkout@v3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">submodules&lt;/span>: recursive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">fetch-depth&lt;/span>: &lt;span style="color:#ff9f43">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ff6ac1">name&lt;/span>: Build my website
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">run&lt;/span>: |&lt;span style="color:#5af78e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e"> echo &amp;#34;Building the website ... (Remember to replace it with the real command!!!)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ff6ac1">name&lt;/span>: Deploy to GitHub Pages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">uses&lt;/span>: peaceiris/actions-gh-pages@v3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">personal_token&lt;/span>: ${{ secrets.GH_PAGES_PAT }} &lt;span style="color:#78787e"># The pre-defined secret in Step 2.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">publish_dir&lt;/span>: ./public &lt;span style="color:#78787e"># Content in this folder will be pushed to the target repo.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">user_name&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;github-actions[bot]&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">user_email&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;github-actions[bot]@users.noreply.github.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">external_repository&lt;/span>: Junyi-99/blog.github.io &lt;span style="color:#78787e"># Your GitHub Pages Repo (target repo)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">commit_message&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;Automated deployment from Repository blog-src&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="第四步推送到-blog-src" >
&lt;div>
&lt;a href="#%e7%ac%ac%e5%9b%9b%e6%ad%a5%e6%8e%a8%e9%80%81%e5%88%b0-blog-src">
#
&lt;/a>
第四步，推送到 &lt;code>blog-src&lt;/code>
&lt;/div>
&lt;/h2>
&lt;p>在这个步骤中，你需要做的就是向 &lt;code>blog-src&lt;/code> &lt;strong>推送&lt;/strong> 一些提交，如果一切顺利的话，你的 GitHub Actions 将会自动执行，构建你的网站，并将其推送到 &lt;code>blog.github.io&lt;/code> 仓库。&lt;/p>
&lt;p>（文章结束）&lt;/p></description></item></channel></rss>